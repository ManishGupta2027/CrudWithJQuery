@*@model CrudOperation.Models.Product

    @{
        ViewBag.Title = "Edit";
    }

    <h2>Edit</h2>

    <p>
        <a href="@Url.Action("GetProductList")" class="btn btn-primary">Back to List</a>
    </p>

    <div class="container-fluid min-vh-100 w-50 justify-content-center">
        @using (Html.BeginForm())
        {
            <div class="mb-3">
                <label>Title</label>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", id = "title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", id = "titleError" })
            </div>
            <div class="mb-3">
                <label>StockCode</label>
                @Html.EditorFor(model => model.StockCode, new { htmlAttributes = new { @class = "form-control", id = "stockcode" } })
                @Html.ValidationMessageFor(model => model.StockCode, "", new { @class = "text-danger", id = "stockcodeError" })
            </div>

            <div class="mb-3">
                <label>Price</label>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", id = "price", type = "number", inputmode = "numeric" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger", id = "priceError" })
            </div>

            <div class="dropdown mb-3">
                <label>Category:</label>
                <button class="btn btn-warning dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                    @Html.DisplayFor(model => model.Category)
                </button>
                <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton1">
                    <li><a class="dropdown-item" href="#" onclick="changeCategory('Phone')">Phone</a></li>
                    <li><a class="dropdown-item" href="#" onclick="changeCategory('Clothes')">Clothes</a></li>
                    <li><a class="dropdown-item" href="#" onclick="changeCategory('Foods')">Foods</a></li>
                </ul>
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger", id = "categoryError" })
            </div>
            <div class="mb-3">
                <label>Id</label>
                @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control", id = "id", type = "number", inputmode = "numeric" } })
                @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger", id = "idError" })
            </div>
            <script>
                function changeCategory(category) {
                    document.getElementById('dropdownMenuButton1').innerText = category;
                }
            </script>

            <button class="d-grid btn btn-primary w-50 mx-auto" type="submit" value="Submit" id="submitBtn">Submit</button>
        }

    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to validate form
            function validateForm() {
                var title = $("#title").val().trim();
                var stockcode = $("#stockcode").val().trim();
                var category = $("#dropdownMenuButton1").text().trim();
                var price = $("#price").val().trim();
                var id = $("#id").val().trim();

                // Reset previous errors
                $(".text-danger").html("");

                var isValid = true;

                // Title validation
                if (title === "") {
                    $("#titleError").html("Title cannot be empty");
                    isValid = false;
                }

                // StockCode validation
                if (stockcode === "") {
                    $("#stockcodeError").html("Stock Code cannot be empty");
                    isValid = false;
                }

                // Category validation
                if (category === "Select Any Category") {
                    $("#categoryError").html("Please select a category");
                    isValid = false;
                }

                // Price validation
                if (price === "") {
                    $("#priceError").html("Price cannot be empty");
                    isValid = false;
                }

                return isValid;
            }

            // Bind input event listeners to clear error messages
            $("#title, #stockcode, #price").on("input", function () {
                $(this).siblings(".text-danger").html("");
            });

            // Bind click event to submit button
            $("#submitBtn").click(function () {
                if (validateForm()) {

                    var data = {
                        title: $("#title").val().trim(),
                        stockcode: $("#stockcode").val().trim(),
                        category: $("#dropdownMenuButton1").text().trim(),
                        price: $("#price").val().trim()
                        id: $("#id").val().trim()
                    };

                    $.ajax({
                        url: "/Product/UpsertProduct",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function (response) {
                            // Handle success response
                            if (response === true) {
                                alert("Form submitted successfully!");
                                window.location.href = "/Product/GetProductList"
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle error
                            console.error(xhr.responseText);
                        }
                    });


                }
            });
        });
    </script>*@



@model CrudOperation.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<p>
    <a href="@Url.Action("GetProductList")" class="btn btn-primary">Back to List</a>
</p>

<div class="container-fluid min-vh-100 w-50 justify-content-center">
    <form class="mb-3" action="#">
        <div class="mb-3">
            <label>Id</label>
            <input type="text" class="form-control" id="id" placeholder="Id" value="@Model.Id" disabled>
            <span id="idError" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label>Title</label>
            <input type="text" class="form-control" id="title" placeholder="Title" value="@Model.Title">
            <span id="titleError" class="text-danger"></span>
        </div>
        <div class="mb-3">
            <label>StockCode</label>
            <input type="text" class="form-control" id="stockcode" placeholder="Stock Code" value="@Model.StockCode" disabled>
            <span id="stockcodeError" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label>Price</label>
            <input type="number" class="form-control" id="price" placeholder="Price" inputmode="numeric" value="@Model.Price">
            <span id="priceError" class="text-danger"></span>
        </div>

        <div class="dropdown mb-3">
            <label>Category:</label>
            <button class="btn btn-warning dropdown-toggle w-100" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                @Model.Category
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" href="#" onclick="changeCategory('Phone')">Phone</a></li>
                <li><a class="dropdown-item" href="#" onclick="changeCategory('Clothes')">Clothes</a></li>
                <li><a class="dropdown-item" href="#" onclick="changeCategory('Foods')">Foods</a></li>
            </ul>
            <span id="categoryError" class="text-danger"></span>
        </div>
        <script>
            function changeCategory(category) {
                document.getElementById('dropdownMenuButton1').innerText = category;
            }
        </script>
        <button class="d-grid btn btn-primary w-50 mx-auto" type="button" value="Submit" id="submitBtn">Submit</button>
    </form>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        // Function to validate form
        function validateForm() {
            var id = $("#id").val().trim();
            var title = $("#title").val().trim();
            var stockcode = $("#stockcode").val().trim();
            var price = $("#price").val().trim();
            var category = $("#dropdownMenuButton1").text().trim();
            // Reset previous errors
            $(".text-danger").html("");

            var isValid = true;

            // Id validation
            if (id === "") {
                $("#idError").html("Id cannot be empty");
                isValid = false;
            }

            // Title validation
            if (title === "") {
                $("#titleError").html("Title cannot be empty");
                isValid = false;
            }

            // StockCode validation
            if (stockcode === "") {
                $("#stockcodeError").html("Stock Code cannot be empty");
                isValid = false;
            }
           
            // Price validation
            if (price === "") {
                $("#priceError").html("Price cannot be empty");
                isValid = false;
            }
            // Category validation
            if (category === "Select Any Category") {
                $("#categoryError").html("Please select a category");
                isValid = false;
            }
            return isValid;
        }

        // Bind input event listeners to clear error messages
        $("#id, #title, #stockcode, #price").on("input", function () {
            $(this).siblings(".text-danger").html("");
        });

        // Bind click event to submit button
        $("#submitBtn").click(function () {
            if (validateForm()) {
                var data = {
                    id: $("#id").val().trim(),
                    title: $("#title").val().trim(),
                    stockcode: $("#stockcode").val().trim(),
                    price: $("#price").val().trim(),
                    category: $("#dropdownMenuButton1").text().trim(),
                };

                $.ajax({
                    url: "/Product/UpsertProduct",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    success: function (response) {
                        // Handle success response
                        if (response === true) {
                            alert("Form submitted successfully!");
                            window.location.href = "/Product/GetProductList";
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.error(xhr.responseText);
                    }
                });
            }
        });
    });
</script>
